2 y 3. 

    El conjunto C de candidatos, en este caso, las distancias entre las oficinas y el flujo de trabajo de los oficinistas. Se almacenarán cada uno en una matriz de NxN y serán las entradas del problema.
    Función solución. Comprueba, en cada paso, si el subconjunto actual de candidatos elegidos forma una solución (no importa si es óptima o no lo es). En nuestro caso una vez el conjunto de candidatos esté vacío habremos llegado a la solución.
    Función de selección. Informa cuál es el elemento más prometedor para completar la solución. Éste no puede haber sido escogido con anterioridad. Cada elemento es considerado una sola vez. Luego, puede ser rechazado o aceptado y pertenecerá a C ∖ S. Para nuestro algoritmo escogemos el oficinista con menor flujo de trabajo y le asignamos la habitación con mayor distancia.
    Función de factibilidad. Informa si a partir de un conjunto se puede llegar a una solución. En este caso la función de selección ya implementa la de factibilidad porque escogemos un elemento que es factible.
    Función objetivo. Es aquella que queremos maximizar o minimizar, el núcleo del problema. En nuestro problema queremos asignar a oficinistas con la máxima carga de trabajo a habitaciones con la mínima distancia.

4.
Incluir captura de pantalla de matrices.dat y de su ejecución en la terminal. Explicar lo ocurrido.

5. 
Diseño de centros comerciales donde se quiere que el público recorra la menor cantidad de distancia para llegar a tiendas de intereses comunes para un sector del público.
Diseño de circuitos eléctricos, en donde es de relevante importancia dónde se ubican ciertas partes o chips con el fin de minimizar la distancia entre ellos, ya que las conexiones son de alto costo.
